[tool.poetry]
name = "latentspace-explorer"
packages = [{include = "lse"}]
version = "0.0.0"
description = "Easily dive into multivariate data"
authors = ["Parici75 <benjamin.roland@hotmail.fr>"]
license = "BSD-3-Clause"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
redis = "^5.0.1"
dash = "^2.15.0"
gunicorn = "^21.2.0"
python-dotenv = "^1.0.0"
mltoolbox = {git = "https://github.com/Parici75/mltoolbox.git", rev = "0.1.2"}
statsplotly = "^0.2.2"
orjson = "^3.10.7"
flask-caching = "^2.3.0"
bottleneck = "^1.4.0"
pyarrow = "^17.0.0"
dill = "^0.3.9"


[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
mypy = "^1.10.0"
ruff = "^0.4.3"
black = "^24.4.2"
isort = "^5.13.2"
pyupgrade = "^3.15.1"
pre-commit = "^3.6.2"
pyclean = "^2.7.3"
fakeredis = "^2.25.1"
pytest-mock = "^3.14.0"


[tool.poetry.group.docs]
[tool.poetry.group.docs.dependencies]
myst = "^1.0.4"
myst-nb = "^1.1.1"
autodoc-pydantic = "^2.2.0"
sphinx = "^8.0.2"
furo = "^2024.8.6"
nbconvert = "^7.16.4"


[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern  = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"


## Tools
[tool.black]
target-version = ['py310', 'py311', 'py312']
line-length = 100
preview = true

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = ["tests"]
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "S", # flake8-bandit
    "A", # flake8-builtins
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "PL", # pylint
]
ignore = [
    "E501",
    "PLC1901", # compare-to-empty-string
    "PLR0913", # Too many arguments to function call
    "S301" # suspicious-pickle-usage
]
exclude = ["lse/libs/components/layout.py"]

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.mypy]
exclude = ["tests"]
plugins = [
  "pydantic.mypy", "numpy.typing.mypy_plugin"
]
cache_dir = ".mypy_cache/strict"
show_column_numbers = true

follow_imports = "normal"
warn_no_return = true
warn_return_any = false
disallow_any_unimported = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
implicit_reexport = false
strict_equality = true

# mypy per-module options
[[tool.mypy.overrides]]
module = ["dash.*", "numpy.*", "scipy.*", "sklearn.*", "joblib.*", "pandas.*", "seaborn.*", "plotly.*", "statsplotly.*", "pymodules.*", "mltoolbox.*", "redis.*", "dill.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["lse.libs.dash_core.*"]
disallow_untyped_decorators = false

[tool.pytest.ini_options]
log_cli = true
log_cli_level = 10
testpaths = ["tests"]
